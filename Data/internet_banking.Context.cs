//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Entity;

    public partial class internet_bankingEntities : DbContext
    {
        public internet_bankingEntities()
            : base("name=internet_bankingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CLIENTE> CLIENTEs { get; set; }
        public virtual DbSet<CUENTA> CUENTAs { get; set; }
        public virtual DbSet<CUOTA> CUOTAs { get; set; }
        public virtual DbSet<PRESTAMO> PRESTAMOs { get; set; }
        public virtual DbSet<TARJETA> TARJETAs { get; set; }
        public virtual DbSet<TRANSACCION> TRANSACCIONs { get; set; }
        public virtual DbSet<USUARIO> USUARIOs { get; set; }
    
        public virtual ObjectResult<CUENTAS_CLIENTE_Result> CUENTAS_CLIENTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CUENTAS_CLIENTE_Result>("CUENTAS_CLIENTE", idParameter);
        }
    
        public virtual ObjectResult<PRESTAMOS_CLIENTE_Result> PRESTAMOS_CLIENTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRESTAMOS_CLIENTE_Result>("PRESTAMOS_CLIENTE", idParameter);
        }
    
        public virtual ObjectResult<TARJETAS_CLIENTE_Result> TARJETAS_CLIENTE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TARJETAS_CLIENTE_Result>("TARJETAS_CLIENTE", idParameter);
        }
    
        public virtual ObjectResult<TRANSACCIONES_TIEMPO_Result> TRANSACCIONES_TIEMPO(Nullable<int> id, Nullable<System.DateTime> f1, Nullable<System.DateTime> f2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var f1Parameter = f1.HasValue ?
                new ObjectParameter("f1", f1) :
                new ObjectParameter("f1", typeof(System.DateTime));
    
            var f2Parameter = f2.HasValue ?
                new ObjectParameter("f2", f2) :
                new ObjectParameter("f2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TRANSACCIONES_TIEMPO_Result>("TRANSACCIONES_TIEMPO", idParameter, f1Parameter, f2Parameter);
        }
    
        public virtual int UPDATE_SAL(Nullable<int> id, Nullable<double> monto)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_SAL", idParameter, montoParameter);
        }

        public virtual ObjectResult<LOG_IN_Result> LOG_IN(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));

            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOG_IN_Result>("LOG_IN", userParameter, passParameter);
        }
    }
}
